pipeline {
  agent {
    label 'zfs'
  }

  stages {

    stage('clean') {
      steps {
        sh 'killall expect || true'
        sh 'killall cu || true'
        sh 'bhyvectl --destroy --vm=freebsd-ztest || true'
        sh 'ifconfig bridge0 deletem tap1 || true'
        sh 'ifconfig tap1 destroy || true'
        sh 'umount -f /scratch || true'
        sh 'rm -rf /scratch || true'
        sh 'zfs destroy -f tank/ztest-os || true'
        sh 'zfs destroy -f tank/ztest-data || true'
      }
    }
    
    stage('pull') {
      steps {
        sh 'cd /usr/src && git stash || true'
        sh 'cd /usr/src && git pull'
        sh 'cd /usr/src && git stash pop || true'
      }
    }
    
    stage('build') {
      steps {
        sh 'cd /usr/src && make WITH_META_MODE=yes WITH_CCACHE_BUILD=yes buildworld -j $(sysctl -n hw.ncpu)'
        sh 'cd /usr/src && make WITH_META_MODE=yes WITH_CCACHE_BUILD=yes buildkernel -j $(sysctl -n hw.ncpu)'
      }
    }
    
    stage('deploy') {
      steps {
        sh 'zfs create -V 16g tank/ztest-os'
        sh 'zfs create -V 50g tank/ztest-data'
        sh 'gpart create -s gpt /dev/zvol/tank/ztest-os'
        sh 'gpart add -s 800K -t efi /dev/zvol/tank/ztest-os'
        sh 'gpart add -a 4k -t freebsd-swap -s 2G -l swap0 /dev/zvol/tank/ztest-os'
        sh 'gpart add -a 1m -t freebsd-zfs -l rootfs /dev/zvol/tank/ztest-os'
        sh 'dd if=/usr/obj/usr/src/amd64.amd64/stand/efi/boot1/boot1.efifat of=/dev/zvol/tank/ztest-osp1'
        sh 'newfs /dev/zvol/tank/ztest-osp3'
        sh 'mkdir /scratch || true'
        sh 'mount /dev/zvol/tank/ztest-osp3 /scratch'
        sh 'cd /usr/src && make installworld DESTDIR=/scratch'
        sh 'cd /usr/src && make installkernel DESTDIR=/scratch'
        sh 'cd /usr/src && make distribution DESTDIR=/scratch'
sh '''cat <<EOF | tee /scratch/etc/fstab
# Device        Mountpoint      FStype  Options Dump    Pass#
/dev/gpt/swap0 none            swap    sw      0       0
/dev/gpt/rootfs /               ufs     rw      1       1
EOF'''
        sh 'chroot /scratch echo abcd1234 | chroot /scratch pw mod user root -h 0'
        sh 'touch /scratch/etc/rc.conf'
        sh 'sysrc -f /scratch/etc/rc.conf ifconfig_vtnet0="inet 10.215.2.134/25 mtu 1500"'
        sh 'sysrc -f /scratch/etc/rc.conf defaultrouter="10.215.2.129"'
        sh 'sysrc -f /scratch/etc/rc.conf sshd_enable="YES"'
sh '''cat <<EOF | tee /scratch/etc/resolv.conf
nameserver 10.20.20.2
EOF'''
        sh 'echo "PermitRootLogin yes" >> /scratch/etc/ssh/sshd_config'
sh '''cat <<EOF | tee /scratch/etc/rc.local
env ASSUME_ALWAYS_YES=YES pkg bootstrap
pkg install -fy openjdk8 git-lite
ln -s /usr/local/openjdk8/bin/java /usr/local/bin/java
zpool create ztest vtbd1
echo "Ready for Testing"
EOF'''
        sh 'chmod +x /scratch/etc/rc.local'
        sh 'umount -f /scratch || true'
sh '''cat <<EOF | tee /root/bhyve-bootup.exp
#!/usr/bin/env expect

set nullmodem [lindex \\$argv 0];
set logfilepath [lindex \\$argv 1];
log_file \\$logfilepath
set timeout 1800
set PID [spawn cu -l \\$nullmodem]
send_user "Spawned PID: \\$PID \n"

expect {
  "Ready for Testing" {
    sleep .5
    exit
  }
}
EOF'''
          sh 'ifconfig tap create'
          sh 'ifconfig tap1 mtu 1500'
          sh 'ifconfig bridge0 addm tap1'
          sh '''bhyve -c 4 -m 32G -w -H \
          -s 0,hostbridge \
          -s 3,virtio-blk,/dev/zvol/tank/ztest-os \
          -s 4,virtio-blk,/dev/zvol/tank/ztest-data \
          -s 5,virtio-net,tap1 \
          -s 31,lpc -l com1,/dev/nmdm0A \
          -l bootrom,/usr/local/share/uefi-firmware/BHYVE_UEFI.fd \
          freebsd-ztest &'''
          sh 'expect /root/bhyve-bootup.exp /dev/nmdm0B /tmp/bhyve-bootup.out'
      }
    }
    
    stage('tests') {
    agent {
    label 'ztest'
    }
      steps {
          sh 'ztest /ztest/'
          sh 'ztest /ztest/'
          sh 'ztest /ztest/'
          sh 'ztest /ztest/'
          sh 'ztest /ztest/'
      }
    }
    
    stage('cooldown') {
    agent {
    label 'ZTEST-COOLDOWN'
    }
      steps {
          sh 'sleep 60'
      }
    }
    
  }
}
